- Maven will handle classpath; should not have to do any class loader
  - need to find some way to include the target directory

- just use EvalConfigEngine to execute Groovy eval scripts; it is
  responsible for getting the right stuff in the classpath
  - could just create a new classloader derived from base class loader
    that also includes the project build directory, and pass that as
    an argument to the eval config engine

- add force option, to force the execution even if it's not needed

- set of scripts

- Maven has a bunch of properties that it sets; we need to get those
  properties into the eval config engine, and then into the groovy
  script 
  - in a plugin can we find the maven properties list
  - MavenProject project in TrainTest has a getProperties

- EvalConfigScript is a base class that all Groovy scripts implicitly
  inherit from

- make properties a setProperties object in EvalConfigEngine

----------------
- should there be a dependency on the eval-plugin in poms for projects
  that use it?  If not, why not?
- if the components.xml file is invalid xml (e.g., an extra -- in a
  comment), the build silently fails, but the new lifecycle is not
  recognized. 
